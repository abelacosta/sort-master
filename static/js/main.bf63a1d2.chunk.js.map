{"version":3,"sources":["components/navbar.jsx","components/bar.jsx","components/toolpanel.jsx","components/graph.jsx","App.js","index.js"],"names":["NavBar","state","webSiteName","className","this","Component","Bar","styles","width","height","props","size","marginLeft","style","ToolPanel","onClick","onRandomize","type","onChange","event","onResize","target","value","min","max","onSort","Graph","bars","maxHeight","minHeight","handleRandomize","tempBars","randomizeArray","setState","handleSort","method","handleResize","newBars","increment","Math","floor","i","barHeight","push","id","shortid","generate","arr","length","j","random","temp","map","bar","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAgBeA,E,4MAbbC,MAAQ,CACNC,YAAa,e,uDAIb,OACE,yBAAKC,UAAU,kCACb,wBAAIA,UAAU,gBAAgBC,KAAKH,MAAMC,kB,GAR5BG,a,gBCWNC,E,4MAVbC,OAAS,CACPC,MAAO,GACPC,OAAQ,EAAKC,MAAMC,KACnBC,WAAY,G,uDAGZ,OAAO,yBAAKC,MAAOT,KAAKG,OAAQJ,UAAU,mB,GAP5BE,aCyFHS,E,uKAxFH,IAAD,OACP,OACE,yBAAKX,UAAU,YACb,4BACEY,QAAS,WACP,EAAKL,MAAMM,eAEbC,KAAK,SACLd,UAAU,oCALZ,aASA,kDACA,2BACEc,KAAK,QACLC,SAAU,SAACC,GACT,EAAKT,MAAMU,SAASD,EAAME,OAAOC,QAEnCC,IAAI,IACJC,IAAI,MACJrB,UAAU,UAEZ,gDACA,yBAAKA,UAAU,OACb,4BACEY,QAAS,WACP,EAAKL,MAAMe,OAAO,WAEpBR,KAAK,SACLd,UAAU,wBALZ,eASA,4BACEY,QAAS,WACP,EAAKL,MAAMe,OAAO,cAEpBR,KAAK,SACLd,UAAU,wBALZ,mBAUF,yBAAKA,UAAU,OACb,4BACEY,QAAS,WACP,EAAKL,MAAMe,OAAO,cAEpBR,KAAK,SACLd,UAAU,wBALZ,kBASA,4BACEY,QAAS,WACP,EAAKL,MAAMe,OAAO,SAEpBR,KAAK,SACLd,UAAU,wBALZ,cAUF,yBAAKA,UAAU,OACb,4BACEY,QAAS,WACP,EAAKL,MAAMe,OAAO,UAEpBR,KAAK,SACLd,UAAU,wBALZ,cASA,4BACEY,QAAS,WACP,EAAKL,MAAMe,OAAO,UAEpBR,KAAK,SACLd,UAAU,wBALZ,oB,GA1EcE,aCoGTqB,E,kDA1Fb,aAAe,IAAD,uBACZ,gBAPFzB,MAAQ,CACN0B,KAAM,GACNC,UAAW,IACXC,UAAW,KAGC,EAmCdC,gBAAkB,WAChB,IAAMC,EAAW,EAAK9B,MAAM0B,KAC5B,EAAKK,eAAeD,GACpB,EAAKE,SAAS,CAAEN,KAAMI,KAtCV,EAyCdG,WAAa,SAACC,GACJA,GA1CI,EA4DdC,aAAe,SAACzB,GAKd,IAJA,IAAM0B,EAAU,GACZC,EAAYC,KAAKC,OAClB,EAAKvC,MAAM2B,UAAY,EAAK3B,MAAM4B,WAAalB,GAEzC8B,EAAI,EAAGA,EAAI9B,EAAM8B,IAAK,CAC7B,IAAIC,EAAY,EAAKzC,MAAM4B,UAAYY,EAAIH,EAC3CD,EAAQM,KAAK,CAAEC,GAAIC,IAAQC,WAAYnC,KAAM+B,IAE/C,EAAKV,eAAeK,GACpB,EAAKJ,SAAS,CAAEN,KAAMU,KAhEtB,IAJA,IAAMA,EAAU,GACZC,EAAYC,KAAKC,OAClB,EAAKvC,MAAM2B,UAAY,EAAK3B,MAAM4B,WAAa,IAEzCY,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIC,EAAY,EAAKzC,MAAM4B,UAAYY,EAAIH,EAC3CD,EAAQM,KAAK,CAAEC,GAAIC,IAAQC,WAAYnC,KAAM+B,IARnC,OAUZ,EAAKV,eAAeK,GACpB,EAAKpC,MAAM0B,KAAOU,EAXN,E,iSA0BCU,GACb,IAAK,IAAIN,EAAIM,EAAIC,OAAS,EAAGP,EAAI,EAAGA,IAAK,CACvC,IAAMQ,EAAIV,KAAKC,MAAMD,KAAKW,SAAWT,GAC/BU,EAAOJ,EAAIN,GACjBM,EAAIN,GAAKM,EAAIE,GACbF,EAAIE,GAAKE,K,+BA0CX,OACE,yBAAKhD,UAAU,iCACb,yBAAKA,UAAU,sCACZC,KAAKH,MAAM0B,KAAKyB,KAAI,SAACC,GAAD,OACnB,kBAAC,EAAD,CAAKC,IAAKD,EAAIT,GAAIjC,KAAM0C,EAAI1C,WAGhC,kBAAC,EAAD,CACES,SAAUhB,KAAKgC,aACfX,OAAQrB,KAAK8B,WACblB,YAAaZ,KAAK0B,uB,GA1FRzB,aCQLkD,MATf,WACE,OACE,yBAAKpD,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCHNqD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.bf63a1d2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n    webSiteName: \"Sort Master\",\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-dark bg-dark p-4\">\r\n        <h1 className=\"navbar-brand\">{this.state.webSiteName}</h1>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Bar extends Component {\r\n  styles = {\r\n    width: 10,\r\n    height: this.props.size,\r\n    marginLeft: 2,\r\n  };\r\n  render() {\r\n    return <div style={this.styles} className=\"bg-primary\"></div>;\r\n  }\r\n}\r\n\r\nexport default Bar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ToolPanel extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"w-25 p-5\">\r\n        <button\r\n          onClick={() => {\r\n            this.props.onRandomize();\r\n          }}\r\n          type=\"button\"\r\n          className=\"btn btn-warning btn-lg w-100 m-1\"\r\n        >\r\n          Randomize\r\n        </button>\r\n        <h6>Number of objects:</h6>\r\n        <input\r\n          type=\"range\"\r\n          onChange={(event) => {\r\n            this.props.onResize(event.target.value);\r\n          }}\r\n          min=\"4\"\r\n          max=\"100\"\r\n          className=\"w-100\"\r\n        ></input>\r\n        <h6>Sorting methods:</h6>\r\n        <div className=\"row\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.onSort(\"bubble\");\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-info col m-1\"\r\n          >\r\n            Bubble Sort\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.onSort(\"selection\");\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-info col m-1\"\r\n          >\r\n            Selection Sort\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.onSort(\"insertion\");\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-info col m-1\"\r\n          >\r\n            Insertion Sort\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.onSort(\"heap\");\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-info col m-1\"\r\n          >\r\n            Heap Sort\r\n          </button>\r\n        </div>\r\n        <div className=\"row\">\r\n          <button\r\n            onClick={() => {\r\n              this.props.onSort(\"quick\");\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-info col m-1\"\r\n          >\r\n            Quick Sort\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.props.onSort(\"merge\");\r\n            }}\r\n            type=\"button\"\r\n            className=\"btn btn-info col m-1\"\r\n          >\r\n            Merge Sort\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ToolPanel;\r\n","import React, { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport Bar from \"./bar\";\r\nimport ToolPanel from \"./toolpanel\";\r\n\r\nclass Graph extends Component {\r\n  state = {\r\n    bars: [],\r\n    maxHeight: 650,\r\n    minHeight: 100,\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const newBars = [];\r\n    let increment = Math.floor(\r\n      (this.state.maxHeight - this.state.minHeight) / 52\r\n    );\r\n    for (let i = 0; i < 52; i++) {\r\n      let barHeight = this.state.minHeight + i * increment;\r\n      newBars.push({ id: shortid.generate(), size: barHeight });\r\n    }\r\n    this.randomizeArray(newBars);\r\n    this.state.bars = newBars;\r\n  }\r\n\r\n  bubbleSort() {}\r\n\r\n  selectionSort() {}\r\n\r\n  insertionSort() {}\r\n\r\n  heapSort() {}\r\n\r\n  quickSort() {}\r\n\r\n  mergeSort() {}\r\n\r\n  randomizeArray(arr) {\r\n    for (let i = arr.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * i);\r\n      const temp = arr[i];\r\n      arr[i] = arr[j];\r\n      arr[j] = temp;\r\n    }\r\n  }\r\n\r\n  handleRandomize = () => {\r\n    const tempBars = this.state.bars;\r\n    this.randomizeArray(tempBars);\r\n    this.setState({ bars: tempBars });\r\n  };\r\n\r\n  handleSort = (method) => {\r\n    switch (method) {\r\n      case \"bubble\":\r\n        break;\r\n      case \"selection\":\r\n        break;\r\n      case \"insertion\":\r\n        break;\r\n      case \"heap\":\r\n        break;\r\n      case \"quick\":\r\n        break;\r\n      case \"merge\":\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  handleResize = (size) => {\r\n    const newBars = [];\r\n    let increment = Math.floor(\r\n      (this.state.maxHeight - this.state.minHeight) / size\r\n    );\r\n    for (let i = 0; i < size; i++) {\r\n      let barHeight = this.state.minHeight + i * increment;\r\n      newBars.push({ id: shortid.generate(), size: barHeight });\r\n    }\r\n    this.randomizeArray(newBars);\r\n    this.setState({ bars: newBars });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex justify-content-center\">\r\n        <div className=\"d-flex justify-content-center w-75\">\r\n          {this.state.bars.map((bar) => (\r\n            <Bar key={bar.id} size={bar.size} />\r\n          ))}\r\n        </div>\r\n        <ToolPanel\r\n          onResize={this.handleResize}\r\n          onSort={this.handleSort}\r\n          onRandomize={this.handleRandomize}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Graph;\r\n","import React from \"react\";\r\nimport NavBar from \"./components/navbar\";\r\nimport Graph from \"./components/graph\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar />\r\n      <Graph />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}